Compiling 1 files with Solc 0.8.20
Solc 0.8.20 finished in 44.17s
Compiler run successful with warnings:
Warning (2018): Function state mutability can be restricted to view
  --> test/DAOtest.t.sol:71:5:
   |
71 |     function testTokenBasicFunctionality() public {
   |     ^ (Relevant source part starts here and spans across multiple lines).


Ran 6 tests for test/DAOtest.t.sol:DAOTest
[PASS] testGovernorProposal() (gas: 244649)
Traces:
  [247449] DAOTest::testGovernorProposal()
    ├─ [0] VM::roll(3)
    │   └─ ← [Return]
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [52577] DAOGovernor::propose([0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], [0], [0x1b9a91a400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a7640000], "Withdraw 1 ETH to user1")
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 3
    │   ├─ [5518] VotingToken::getPastVotes(SHA-256: [0x0000000000000000000000000000000000000002], 2) [staticcall]
    │   │   └─ ← [Return] 100000000000000000000000 [1e23]
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 3
    │   ├─ emit ProposalCreated(proposalId: 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76], proposer: SHA-256: [0x0000000000000000000000000000000000000002], targets: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], values: [0], signatures: [""], calldatas: [0x1b9a91a400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a7640000], voteStart: 4, voteEnd: 50404 [5.04e4], description: "Withdraw 1 ETH to user1")
    │   └─ ← [Return] 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]
    ├─ [2123] DAOGovernor::state(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]) [staticcall]
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 3
    │   └─ ← [Return] 0
    ├─ [0] VM::assertEq(0, 0) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::roll(5)
    │   └─ ← [Return]
    ├─ [2392] DAOGovernor::state(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]) [staticcall]
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 5
    │   └─ ← [Return] 1
    ├─ [0] VM::assertEq(1, 1) [staticcall]
    │   └─ ← [Return]
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [52670] DAOGovernor::castVote(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76], 1)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 5
    │   ├─ [1518] VotingToken::getPastVotes(SHA-256: [0x0000000000000000000000000000000000000002], 4) [staticcall]
    │   │   └─ ← [Return] 100000000000000000000000 [1e23]
    │   ├─ emit VoteCast(voter: SHA-256: [0x0000000000000000000000000000000000000002], proposalId: 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76], support: 1, weight: 100000000000000000000000 [1e23], reason: "")
    │   └─ ← [Return] 100000000000000000000000 [1e23]
    ├─ [0] VM::prank(RIPEMD-160: [0x0000000000000000000000000000000000000003])
    │   └─ ← [Return]
    ├─ [34770] DAOGovernor::castVote(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76], 1)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 5
    │   ├─ [5518] VotingToken::getPastVotes(RIPEMD-160: [0x0000000000000000000000000000000000000003], 4) [staticcall]
    │   │   └─ ← [Return] 50000000000000000000000 [5e22]
    │   ├─ emit VoteCast(voter: RIPEMD-160: [0x0000000000000000000000000000000000000003], proposalId: 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76], support: 1, weight: 50000000000000000000000 [5e22], reason: "")
    │   └─ ← [Return] 50000000000000000000000 [5e22]
    ├─ [0] VM::roll(50406 [5.04e4])
    │   └─ ← [Return]
    ├─ [20135] DAOGovernor::state(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]) [staticcall]
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 50406 [5.04e4]
    │   ├─ [5580] VotingToken::getPastTotalSupply(4) [staticcall]
    │   │   └─ ← [Return] 1000000000000000000000000 [1e24]
    │   └─ ← [Return] 4
    ├─ [0] VM::assertEq(4, 4) [staticcall]
    │   └─ ← [Return]
    ├─ [55167] DAOGovernor::execute([0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], [0], [0x1b9a91a400000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000de0b6b3a7640000], 0x63a073bda667a35985ec280f1d44c722c480fb2f5670e469d5fdf378a09e5e9a)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 50406 [5.04e4]
    │   ├─ [1580] VotingToken::getPastTotalSupply(4) [staticcall]
    │   │   └─ ← [Return] 1000000000000000000000000 [1e24]
    │   ├─ [41060] TokenBank::withdrawEth(SHA-256: [0x0000000000000000000000000000000000000002], 1000000000000000000 [1e18])
    │   │   ├─ [60] PRECOMPILES::sha256{value: 1000000000000000000}(0x)
    │   │   │   └─ ← [Return] 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    │   │   ├─ emit EthWithdrawal(to: SHA-256: [0x0000000000000000000000000000000000000002], amount: 1000000000000000000 [1e18])
    │   │   └─ ← [Return]
    │   ├─ emit ProposalExecuted(proposalId: 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76])
    │   └─ ← [Return] 46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]
    ├─ [0] VM::assertEq(1000000000000000000 [1e18], 1000000000000000000 [1e18]) [staticcall]
    │   └─ ← [Return]
    ├─ [700] DAOGovernor::state(46288576420553080663720264712029816833730931898237876565838257420070976984731 [4.628e76]) [staticcall]
    │   └─ ← [Return] 7
    ├─ [0] VM::assertEq(7, 7) [staticcall]
    │   └─ ← [Return]
    └─ ← [Return]

[PASS] testGovernorTokenWithdrawal() (gas: 255162)
Traces:
  [257962] DAOTest::testGovernorTokenWithdrawal()
    ├─ [0] VM::roll(3)
    │   └─ ← [Return]
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [53318] DAOGovernor::propose([0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], [0], [0x01e33667000000000000000000000000522b3294e6d06aa25ad0f1b8891242e335d3b459000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000003635c9adc5dea00000], "Withdraw 1000 DAO tokens to user1")
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 3
    │   ├─ [5518] VotingToken::getPastVotes(SHA-256: [0x0000000000000000000000000000000000000002], 2) [staticcall]
    │   │   └─ ← [Return] 100000000000000000000000 [1e23]
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 3
    │   ├─ emit ProposalCreated(proposalId: 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76], proposer: SHA-256: [0x0000000000000000000000000000000000000002], targets: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], values: [0], signatures: [""], calldatas: [0x01e33667000000000000000000000000522b3294e6d06aa25ad0f1b8891242e335d3b459000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000003635c9adc5dea00000], voteStart: 4, voteEnd: 50404 [5.04e4], description: "Withdraw 1000 DAO tokens to user1")
    │   └─ ← [Return] 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76]
    ├─ [0] VM::roll(5)
    │   └─ ← [Return]
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [52670] DAOGovernor::castVote(18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76], 1)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 5
    │   ├─ [1518] VotingToken::getPastVotes(SHA-256: [0x0000000000000000000000000000000000000002], 4) [staticcall]
    │   │   └─ ← [Return] 100000000000000000000000 [1e23]
    │   ├─ emit VoteCast(voter: SHA-256: [0x0000000000000000000000000000000000000002], proposalId: 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76], support: 1, weight: 100000000000000000000000 [1e23], reason: "")
    │   └─ ← [Return] 100000000000000000000000 [1e23]
    ├─ [0] VM::prank(RIPEMD-160: [0x0000000000000000000000000000000000000003])
    │   └─ ← [Return]
    ├─ [34770] DAOGovernor::castVote(18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76], 1)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 5
    │   ├─ [5518] VotingToken::getPastVotes(RIPEMD-160: [0x0000000000000000000000000000000000000003], 4) [staticcall]
    │   │   └─ ← [Return] 50000000000000000000000 [5e22]
    │   ├─ emit VoteCast(voter: RIPEMD-160: [0x0000000000000000000000000000000000000003], proposalId: 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76], support: 1, weight: 50000000000000000000000 [5e22], reason: "")
    │   └─ ← [Return] 50000000000000000000000 [5e22]
    ├─ [0] VM::roll(50406 [5.04e4])
    │   └─ ← [Return]
    ├─ [2721] VotingToken::balanceOf(SHA-256: [0x0000000000000000000000000000000000000002]) [staticcall]
    │   └─ ← [Return] 100000000000000000000000 [1e23]
    ├─ [87674] DAOGovernor::execute([0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], [0], [0x01e33667000000000000000000000000522b3294e6d06aa25ad0f1b8891242e335d3b459000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000003635c9adc5dea00000], 0xa97a4c946ea54a5b40f933d3f9d29325fac84e4ca0aed4c858b9efd4e80fd11a)
    │   ├─ [641] VotingToken::clock() [staticcall]
    │   │   └─ ← [Return] 50406 [5.04e4]
    │   ├─ [5580] VotingToken::getPastTotalSupply(4) [staticcall]
    │   │   └─ ← [Return] 1000000000000000000000000 [1e24]
    │   ├─ [59487] TokenBank::withdrawToken(VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459], SHA-256: [0x0000000000000000000000000000000000000002], 1000000000000000000000 [1e21])
    │   │   ├─ [44124] VotingToken::transfer(SHA-256: [0x0000000000000000000000000000000000000002], 1000000000000000000000 [1e21])
    │   │   │   ├─ emit Transfer(from: TokenBank: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], to: SHA-256: [0x0000000000000000000000000000000000000002], value: 1000000000000000000000 [1e21])
    │   │   │   ├─ emit DelegateVotesChanged(delegate: SHA-256: [0x0000000000000000000000000000000000000002], previousVotes: 100000000000000000000000 [1e23], newVotes: 101000000000000000000000 [1.01e23])
    │   │   │   └─ ← [Return] true
    │   │   ├─ emit TokenWithdrawal(token: VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459], to: SHA-256: [0x0000000000000000000000000000000000000002], amount: 1000000000000000000000 [1e21])
    │   │   └─ ← [Return]
    │   ├─ emit ProposalExecuted(proposalId: 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76])
    │   └─ ← [Return] 18285628351786247207411522048321915100470437785536332577042831947037026326586 [1.828e76]
    ├─ [721] VotingToken::balanceOf(SHA-256: [0x0000000000000000000000000000000000000002]) [staticcall]
    │   └─ ← [Return] 101000000000000000000000 [1.01e23]
    ├─ [0] VM::assertEq(101000000000000000000000 [1.01e23], 101000000000000000000000 [1.01e23]) [staticcall]
    │   └─ ← [Return]
    └─ ← [Return]

[PASS] testTokenBankDeposit() (gas: 21629)
Traces:
  [21629] DAOTest::testTokenBankDeposit()
    ├─ [321] TokenBank::getEthBalance() [staticcall]
    │   └─ ← [Return] 10000000000000000000 [1e19]
    ├─ [0] VM::deal(SHA-256: [0x0000000000000000000000000000000000000002], 1000000000000000000 [1e18])
    │   └─ ← [Return]
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [1674] TokenBank::depositEth{value: 1000000000000000000}()
    │   ├─ emit EthDeposit(from: SHA-256: [0x0000000000000000000000000000000000000002], amount: 1000000000000000000 [1e18])
    │   └─ ← [Return]
    ├─ [321] TokenBank::getEthBalance() [staticcall]
    │   └─ ← [Return] 11000000000000000000 [1.1e19]
    ├─ [0] VM::assertEq(11000000000000000000 [1.1e19], 11000000000000000000 [1.1e19]) [staticcall]
    │   └─ ← [Return]
    └─ ← [Return]

[PASS] testTokenBasicFunctionality() (gas: 26540)
Traces:
  [26540] DAOTest::testTokenBasicFunctionality()
    ├─ [2928] VotingToken::name() [staticcall]
    │   └─ ← [Return] "DAO Token"
    ├─ [0] VM::assertEq("DAO Token", "DAO Token") [staticcall]
    │   └─ ← [Return]
    ├─ [3368] VotingToken::symbol() [staticcall]
    │   └─ ← [Return] "DAO"
    ├─ [0] VM::assertEq("DAO", "DAO") [staticcall]
    │   └─ ← [Return]
    ├─ [2304] VotingToken::totalSupply() [staticcall]
    │   └─ ← [Return] 1000000000000000000000000 [1e24]
    ├─ [0] VM::assertEq(1000000000000000000000000 [1e24], 1000000000000000000000000 [1e24]) [staticcall]
    │   └─ ← [Return]
    ├─ [2721] VotingToken::balanceOf(SHA-256: [0x0000000000000000000000000000000000000002]) [staticcall]
    │   └─ ← [Return] 100000000000000000000000 [1e23]
    ├─ [0] VM::assertEq(100000000000000000000000 [1e23], 100000000000000000000000 [1e23]) [staticcall]
    │   └─ ← [Return]
    └─ ← [Return]

[PASS] testTokenDeposit() (gas: 81916)
Traces:
  [101816] DAOTest::testTokenDeposit()
    ├─ [2488] TokenBank::getTokenBalance(VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459]) [staticcall]
    │   └─ ← [Return] 50000000000000000000000 [5e22]
    ├─ [0] VM::startPrank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [24442] VotingToken::approve(TokenBank: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], 1000000000000000000000 [1e21])
    │   ├─ emit Approval(owner: SHA-256: [0x0000000000000000000000000000000000000002], spender: TokenBank: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], value: 1000000000000000000000 [1e21])
    │   └─ ← [Return] true
    ├─ [56155] TokenBank::depositToken(VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459], 1000000000000000000000 [1e21])
    │   ├─ [50489] VotingToken::transferFrom(SHA-256: [0x0000000000000000000000000000000000000002], TokenBank: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], 1000000000000000000000 [1e21])
    │   │   ├─ emit Transfer(from: SHA-256: [0x0000000000000000000000000000000000000002], to: TokenBank: [0xc051134F56d56160E8c8ed9bB3c439c78AB27cCc], value: 1000000000000000000000 [1e21])
    │   │   ├─ emit DelegateVotesChanged(delegate: SHA-256: [0x0000000000000000000000000000000000000002], previousVotes: 100000000000000000000000 [1e23], newVotes: 99000000000000000000000 [9.9e22])
    │   │   └─ ← [Return] true
    │   ├─ emit TokenDeposit(token: VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459], from: SHA-256: [0x0000000000000000000000000000000000000002], amount: 1000000000000000000000 [1e21])
    │   └─ ← [Return]
    ├─ [0] VM::stopPrank()
    │   └─ ← [Return]
    ├─ [488] TokenBank::getTokenBalance(VotingToken: [0x522B3294E6d06aA25Ad0f1B8891242E335D3B459]) [staticcall]
    │   └─ ← [Return] 51000000000000000000000 [5.1e22]
    ├─ [0] VM::assertEq(51000000000000000000000 [5.1e22], 51000000000000000000000 [5.1e22]) [staticcall]
    │   └─ ← [Return]
    └─ ← [Return]

[PASS] testUnauthorizedTokenBankWithdrawal() (gas: 13352)
Traces:
  [13352] DAOTest::testUnauthorizedTokenBankWithdrawal()
    ├─ [0] VM::prank(SHA-256: [0x0000000000000000000000000000000000000002])
    │   └─ ← [Return]
    ├─ [0] VM::expectRevert(custom error 0xf4844814)
    │   └─ ← [Return]
    ├─ [2453] TokenBank::withdrawEth(SHA-256: [0x0000000000000000000000000000000000000002], 1000000000000000000 [1e18])
    │   └─ ← [Revert] OwnableUnauthorizedAccount(0x0000000000000000000000000000000000000002)
    └─ ← [Return]

Suite result: ok. 6 passed; 0 failed; 0 skipped; finished in 4.47ms (4.04ms CPU time)

Ran 1 test suite in 53.97ms (4.47ms CPU time): 6 tests passed, 0 failed, 0 skipped (6 total tests)
